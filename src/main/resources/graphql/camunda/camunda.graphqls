type CamundaProcessDefinition {
    id: ID
    key: Long
    name: String
    bpmnProcessId: String
    resource: String
}

type CamundaProcessDefinitionResultPage {
    content: [CamundaProcessDefinition]
    totalElements: Long!
}

type CamundaForm {
    id: String
    processDefinitionId: String
    schema: String
}

type CamundaTask {
    id: String
    name: String
    processName: String
    processDefinitionKey: String
    processInstanceKey: String
    assignee: String
    creationDate: DateTime
    taskState: CamundaTaskState
    candidateUsers: [String]
    candidateGroups: [String]
    followUpDate: DateTime
    dueDate: DateTime
    formKey: String
    taskDefinitionId: String
}

type CamundaTaskResultPage {
    content: [CamundaTask]
    totalElements: Long!
}

type CamundaTaskCondition {
    id: ID
    type: CamundaTaskConditionType!
    values: [String]
    valueExpression: String
}

type CamundaTaskFilter {
    id: ID
    name: String!
    conditions: [CamundaTaskCondition]
}

type CamundaTaskFilterResultPage {
    content: [CamundaTaskFilter]
    totalElements: Long!
}

extend type Mutation {
    startCamundaProcess(bpmnProcessId: String!, variables: String): Void
    completeCamundaTask(taskId: String!, variables: String): Void
    updateTaskFilter(input: CamundaTaskFilterInput!): CamundaTaskFilter!
    deleteCamundaTaskFilter(id: ID!): Void
}

extend type Query {
    camundaProcessDefinitionList(page: OffsetPageInput, filter: CamundaProcessDefinitionFilterInput): CamundaProcessDefinitionResultPage!
    camundaForm(formId: String, processDefinitionId: String): CamundaForm!
    camundaTask(id: String!): CamundaTask!
    camundaVariables(taskId: String): String
    camundaTaskList(page: OffsetPageInput, sort: [CamundaTaskOrderByInput], filter: CamundaTaskListFilterInput): CamundaTaskResultPage!
    camundaTaskFilter(id: ID!): CamundaTaskFilter!
    camundaTaskFilterList(page: OffsetPageInput): CamundaTaskFilterResultPage!
}


input CamundaProcessDefinitionFilterInput {
    name: String
    bpmnProcessId: String
}

input CamundaTaskListFilterInput {
    filterId: String
}

input CamundaTaskOrderByInput {
    property: CamundaTaskOrderByProperty
    direction: SortDirection
}

input CamundaTaskConditionInput {
    id: ID
    type: CamundaTaskConditionType!
    values: [String]
    valueExpression: String
}

input CamundaTaskFilterInput {
    id: ID
    name: String!
    conditions: [CamundaTaskConditionInput]
}

enum CamundaTaskOrderByProperty {
    NAME
    PROCESS_NAME
    ASSIGNEE
    CREATION_DATE
    FOLLOW_UP_DATE
    DUE_DATE
    TASK_STATE
}

enum CamundaTaskState {
    CREATED
    COMPLETED
}

enum CamundaTaskConditionType {
    PROCESS_DEFINITION_KEY
    PROCESS_DEFINITION_BPMN_PROCESS_ID
    TASK_DEFINITION_KEY
    TASK_STATE
    UNASSIGNED_TASKS
    TASK_ASSIGNEE
    TASK_CANDIDATE_GROUPS
    TASK_CANDIDATE_USERS
    TASK_DUE_DATE_BEFORE
    TASK_DUE_DATE_AFTER
    TASK_FOLLOW_UP_DATE_BEFORE
    TASK_FOLLOW_UP_DATE_AFTER
}