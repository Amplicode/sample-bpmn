# THIS FILE WAS GENERATED AUTOMATICALLY. DO NOT EDIT.
directive @assertFalse on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION

directive @assertTrue on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION

directive @decimalMax(inclusive: Boolean = true, value: String!) on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION

directive @decimalMin(inclusive: Boolean = true, value: String!) on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION

directive @digits(fraction: Int!, integer: Int!) on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION

directive @email(regexp: String = ".*") on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION

directive @future on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION

directive @futureOrPresent on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION

directive @length(max: Int = 2147483647, min: Int = 0) on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION

directive @max(value: Long!) on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION

directive @min(value: Long!) on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION

directive @negative on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION

directive @negativeOrZero on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION

directive @notBlank on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION

directive @notEmpty on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION

directive @null on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION

directive @past on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION

directive @pastOrPresent on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION

directive @pattern(regexp: String!) on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION

directive @positive on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION

directive @positiveOrZero on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION

directive @size(max: Int = 2147483647, min: Int = 0) on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION

directive @url on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION

directive @javaType(name: String!) on SCALAR | OBJECT | INPUT_OBJECT

# Query root
type Query {
  userInfo: UserInfo
  policyholder(id: ID!): PolicyholderDto!
  checkAuthenticated: Void
  policyTypeList: [PolicyTypeDto]!
  policyType(id: ID!): PolicyTypeDto!
  policyList: [PolicyOutputDto]!
  claimList: [ClaimOutputDto]!
  claim(id: ID!): ClaimOutputDto!
  userPermissions: [String]
  policyholderList: [PolicyholderDto]!
  policy(id: ID!): PolicyOutputDto!
  camundaProcessDefinitionList(page: OffsetPageInput, sort: [CamundaProcessDefinitionOrderByInput], filter: CamundaProcessDefinitionFilterInput): CamundaProcessDefinitionResultPage!
  camundaForm(formId: String, processDefinitionId: String): CamundaForm!
  camundaTask(id: String!): CamundaTask!
  camundaTaskList(page: OffsetPageInput, sort: [CamundaTaskOrderByInput], filterId: String): CamundaTaskResultPage!
}

type Mutation {
  updateClaim(input: ClaimInputDto!): ClaimOutputDto!
  deletePolicyType(id: ID!): Void
  updatePolicyholder(input: PolicyholderDtoInput!): PolicyholderDto!
  deleteClaim(id: ID!): Void
  updatePolicy(input: PolicyInputDto!): PolicyOutputDto!
  deletePolicy(id: ID!): Void
  runClaimProcess(policyId: Long!): Void
  deletePolicyholder(id: ID!): Void
  updatePolicyType(input: PolicyTypeDtoInput!): PolicyTypeDto!
  startCamundaProcess(bpmnProcessId: String!, variables: String): Void
  completeCamundaTask(taskId: String!, variables: String): Void
}

type CamundaForm {
  id: String
  processDefinitionId: String
  schema: String
}

type CamundaProcessDefinition {
  key: Long
  name: String
  version: Long
  bpmnProcessId: String
}

type CamundaProcessDefinitionResultPage {
  content: [CamundaProcessDefinition]
  totalElements: Long!
}

type CamundaTask {
  id: String
  name: String
  processName: String
  processDefinitionKey: String
  processInstanceKey: String
  assignee: String
  creationDate: String
  taskState: CamundaTaskState
  candidateUsers: [String]
  candidateGroups: [String]
  followUpDate: DateTime
  dueDate: DateTime
  formKey: String
  taskDefinitionId: String
}

type CamundaTaskResultPage {
  content: [CamundaTask]
  totalElements: Long!
}

type ClaimOutputDto {
  description: String
  id: ID
  policy: PolicyOutputDto
  timestamp: DateTime
}

type PolicyOutputDto {
  caseDescription: String
  id: ID
  insurancePremium: BigDecimal
  insuranceSum: BigDecimal
  name: String
  policyType: PolicyTypeDto
  policyholder: PolicyholderDto
}

type PolicyTypeDto {
  description: String
  id: ID
  name: String
}

type PolicyholderDto {
  address: String
  dateOfBirth: Date
  id: ID
  name: String
}

# Contains information about user
type UserInfo {
  id: String!
  fullName: String
  avatar: String
}

input CamundaProcessDefinitionFilterInput {
  name: String
  bpmnProcessId: String
}

input CamundaProcessDefinitionOrderByInput {
  property: CamundaProcessDefinitionOrderByProperty
  direction: SortDirection
}

input CamundaTaskOrderByInput {
  property: CamundaTaskOrderByProperty
  direction: SortDirection
}

input ClaimInputDto {
  description: String
  id: ID
  policy: PolicyInputDto
  timestamp: DateTime
}

input OffsetPageInput {
  number: Int!
  size: Int!
}

input PolicyInputDto {
  caseDescription: String
  id: ID
  insurancePremium: BigDecimal
  insuranceSum: BigDecimal
  name: String
  policyType: PolicyTypeDtoInput
  policyholder: PolicyholderDtoInput
}

input PolicyTypeDtoInput {
  description: String
  id: ID
  name: String
}

input PolicyholderDtoInput {
  address: String
  dateOfBirth: Date
  id: ID
  name: String
}

enum CamundaProcessDefinitionOrderByProperty {
  NAME
  BPMN_PROCESS_ID
}

enum CamundaTaskOrderByProperty {
  NAME
  PROCESS_NAME
  ASSIGNEE
  CREATION_DATE
  FOLLOW_UP_DATE
  DUE_DATE
}

enum CamundaTaskState {
  CREATED
  COMPLETED
  CANCELED
}

enum SortDirection {
  ASC
  DESC
}

scalar BigDecimal

scalar BigInteger

scalar Date

scalar DateTime

scalar LocalDateTime

scalar LocalTime

scalar Long

scalar Time

scalar Timestamp

scalar Url

scalar Void

